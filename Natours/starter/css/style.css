/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* resetting css with universal selector'*' */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: "Lato, sans-serif";
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* clip-path property is used to change the shape of the container to polygon by specifying the change that is required on (x, y) axis of all 4 corners of the polygon. Top left corner is the first corner and it continuos clockwise Refer: Building the Header- Part1 from 18:20 */
  /* https://bennettfeely.com/clippy/ */
  /* clip-path: polygon(x y, x y, x y, x y); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* transform is used to center the div */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  /* adding the specific animation */
  animation-name: moveInLeft;
  animation-duration: 3s;
  animation-timing-function: ease-out;
  /* It delays the animation initially and repeat 3 times */
  /* animation-delay: 1s;
  animation-iteration-count: 3; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  /* short hand  */
  animation: moveInRight 3s ease-out;
}

/* Adding animations */
@keyframes moveInLeft {
  /* 0% is before the start of animations */
  0% {
    opacity: 0;
    transform: translateX(-100px);
    /* can also use rotate property  */
    /* transform: translateX(-100px) rotate(0deg); */
  }
  80% {
    transform: translateX(10px);
  }
  /* 100% is when the animation ends */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* 0% is before the start of animations */
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  /* 100% is when the animation ends */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  /* 0% is before the start of animations */
  0% {
    opacity: 0;
    transform: translateY(100px);
  }
  80% {
    transform: translateY(-10px);
  }
  /* 100% is when the animation ends */
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* used css pseudo class */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
  /* animation: moveInBottom 3s ease-out; */
}

.btn:hover {
  transform: translateY(-3px);
  /* box-shadow: x y blurr color of the shadow */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
/* When button is clicked, it is called active state */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}
.btn-white {
  background-color: #fff;
  color: #777;
}
/* after allows us to make a pseudo element */
.btn::after {
  /* to render pseudo element on page we need to specify content property, all other properties should be similar to the original btn element as pesudo element is considered as the child of actual button element*/
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4;
}

.btn-white::after {
  background-color: #fff;
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btm-animated {
  animation: moveInBottom 3s ease-out 0.75s;
  animation-fill-mode: backwards;
}
